{
	"info": {
		"_postman_id": "6490cb79-2865-4744-9c4a-b967d4903ba9",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crate Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Board should be created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"My Board\");\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"pm.test(\"Board should be private\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"});\r",
							"pm.environment.set(\"trelloBoardId\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/boards/?name={{boardName}}&key={{trelloKey}}&token={{trelloToken}}&defaultLists=false",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Name equal to TODO\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"TODO\");\r",
							"});\r",
							"pm.test(\"Should not be closed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"pm.test(\"Create on correct board\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"trelloBoardId\"));\r",
							"});\r",
							"pm.environment.set(\"TODOListId\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/lists?name={{TODOListName}}&idBoard={{trelloBoardId}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{TODOListName}}"
						},
						{
							"key": "idBoard",
							"value": "{{trelloBoardId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Name equal to DONE\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"DONE\");\r",
							"});\r",
							"pm.test(\"Should not be closed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"pm.test(\"Create on correct board\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"trelloBoardId\"));\r",
							"});\r",
							"pm.environment.set(\"DONEListId\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/lists?name={{DONEListName}}&idBoard={{trelloBoardId}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{DONEListName}}"
						},
						{
							"key": "idBoard",
							"value": "{{trelloBoardId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card Learn Postman",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Card name equal to Learn Postman\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"cardName\"));\r",
							"});\r",
							"pm.test(\"Should not be closed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"pm.test(\"Created on correct list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"TODOListId\"));\r",
							"});\r",
							"pm.test(\"Created on correct board\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"trelloBoardId\"));\r",
							"});\r",
							"pm.test(\"No votes nor attachements\", function () {\r",
							"    const badges = pm.response.json().badges;\r",
							"    pm.expect(badges.votes).to.eql(0);\r",
							"\r",
							"    const attachments = JSON.parse(badges.attachments);\r",
							"    for(const attachment in attachments) {\r",
							"        pm.expect(attachment.board).to.eql(0);\r",
							"        pm.expect(attachment.card).to.eql(0);\r",
							"    }\r",
							"});\r",
							"pm.environment.set(\"LearnPostmanCardId\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/cards?token={{trelloToken}}&key={{trelloKey}}&idList={{TODOListId}}&name={{cardName}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "idList",
							"value": "{{TODOListId}}"
						},
						{
							"key": "name",
							"value": "{{cardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card from TODO to DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Name to equal as before\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"cardName\"));\r",
							"});\r",
							"pm.test(\"On the list DONE\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"DONEListId\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/cards/{{LearnPostmanCardId}}/?idList={{DONEListId}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"cards",
						"{{LearnPostmanCardId}}",
						""
					],
					"query": [
						{
							"key": "idList",
							"value": "{{DONEListId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{trelloAPIURL}}/1/boards/{{trelloBoardId}}?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{trelloAPIURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{trelloBoardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		}
	]
}